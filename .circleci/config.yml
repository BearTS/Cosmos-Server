version: 2
jobs:
  build:
    machine: # executor type
      image: ubuntu-2004:202010-01 # # recommended linux image - includes Ubuntu 20.04, docker 19.03.13, docker-compose 1.27.4

    steps:
      - checkout

      - run:
          name: install dependencies
          command: sudo apt-get install bash curl

      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
          
      - run:
          name: Download GeoLite2-Country database
          command: |
            curl -s -L "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=$MAX_TOKEN&suffix=tar.gz" -o GeoLite2-Country.tar.gz
            tar -xzf GeoLite2-Country.tar.gz --strip-components 1 --wildcards "*.mmdb"

      - run:
          name: Build UI
          command: npm run client-build

      - run:
          name: Build and publish dockerfiles
          command: sh docker.sh

  buildarm:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium

    steps:
      - checkout

      - run:
          name: install dependencies
          command: sudo apt-get install bash curl

      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
          
      - run:
          name: Download GeoLite2-Country database
          command: |
            curl -s -L "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=$MAX_TOKEN&suffix=tar.gz" -o GeoLite2-Country.tar.gz
            tar -xzf GeoLite2-Country.tar.gz --strip-components 1 --wildcards "*.mmdb"

      - run:
          name: Build and publish dockerfiles
          command: sh docker.arm64.sh

workflows:
  version: 2
  build-all:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - unstable
      - buildarm:
          filters:
            branches:
              only:
                - master
                - unstable